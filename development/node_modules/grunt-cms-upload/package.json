{
  "_args": [
    [
      {
        "raw": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
        "spec": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:Banno/grunt-cms-upload.git#v0.2.1",
          "sshUrl": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
          "httpsUrl": "git+https://github.com/Banno/grunt-cms-upload.git#v0.2.1",
          "gitUrl": "git://github.com/Banno/grunt-cms-upload.git#v0.2.1",
          "shortcut": "github:Banno/grunt-cms-upload#v0.2.1",
          "directUrl": "https://raw.githubusercontent.com/Banno/grunt-cms-upload/v0.2.1/package.json"
        }
      },
      "/Users/airons/Documents/Sites/bannobootstrap-bs3-new/development"
    ]
  ],
  "_from": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
  "_id": "grunt-cms-upload@0.2.0",
  "_inCache": true,
  "_location": "/grunt-cms-upload",
  "_phantomChildren": {
    "aws-sign": "0.3.0",
    "cookie-jar": "0.3.0",
    "ctype": "0.5.2",
    "mime": "1.2.4"
  },
  "_requested": {
    "raw": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
    "spec": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:Banno/grunt-cms-upload.git#v0.2.1",
      "sshUrl": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
      "httpsUrl": "git+https://github.com/Banno/grunt-cms-upload.git#v0.2.1",
      "gitUrl": "git://github.com/Banno/grunt-cms-upload.git#v0.2.1",
      "shortcut": "github:Banno/grunt-cms-upload#v0.2.1",
      "directUrl": "https://raw.githubusercontent.com/Banno/grunt-cms-upload/v0.2.1/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#fa48b2b3ce4ea092fae3eba6f6de8195a6fe3236",
  "_shasum": "ec4f6fa0082e31faacc12a327c245ad869edf635",
  "_shrinkwrap": null,
  "_spec": "git+ssh://git@github.com/Banno/grunt-cms-upload.git#v0.2.1",
  "_where": "/Users/airons/Documents/Sites/bannobootstrap-bs3-new/development",
  "author": {
    "name": "Jack Viers",
    "email": "jack.viers@banno.com"
  },
  "bugs": {
    "url": "https://github.com/Banno/grunt-cms-upload/issues"
  },
  "dependencies": {
    "form-data": "0.0.8",
    "request": "~2.20.0",
    "when": "~2.0.1"
  },
  "description": "A grunt plugin for cms project uploads.",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-bump": "0.0.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "fa48b2b3ce4ea092fae3eba6f6de8195a6fe3236",
  "homepage": "https://github.com/Banno/grunt-cms-upload",
  "keywords": [
    "gruntplugin"
  ],
  "licenses": [
    {
      "type": "BANNO",
      "url": "https://github.com/Banno/grunt-cms-upload/blob/master/LICENSE-BANNO"
    }
  ],
  "main": "Gruntfile.js",
  "name": "grunt-cms-upload",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# grunt-cms-upload\n\n> A grunt plugin for cms project uploads.\n\n## NOTE\nWhen using this to upload files, you must use the command-line to enter the ```--email=youremail.banno.com``` ```--password=yourldappassword``` command line arguments. Do not include them in GRUNTFILES!!! Remember, this is your password, and uploads are logged against your account. You are responsible for using them correctly.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-cms-upload --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-cms-upload');\n```\n\n## The \"cms_upload\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `cms_upload` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  email: grunt.option('email'),\n  password: grunt.option('password'),\n  cms_upload: {\n    options: {\n      url: '', // the url you want to upload to\n      ignoreMissing: false // true if you want to ignore a missing zip in your files list.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.url\nType: `URL`\nDefault value: `'http://artemis.local:9000'`\n\nThe url to upload to.\n\n#### options.punctuation\nType: `ignoreMissing`\nDefault value: `false`\n\nWhen true, missing zips will be filtered out of the list of zips to upload and the build will continue. When false, the build will fail if a zip in the file list is missing.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to upload the file deploy/someZip.zip template to artemis.local:9000. The email and password configuration values pull from the command-line arguments --email=youremail@banno.com --password=yourpassword.\n\n```js\ngrunt.initConfig({\n  cms_upload: {\n    email: grunt.option('email'),\n    password: grunt.option('password'),\n    options: {},\n    src: ['deploy/someZip.zip']\n  },\n})\n```\n\n#### Custom Options\nIn this example, two targets are used: uat and staging. Staging gets the deploy/dummyZip.zip theme and uat gets the deploy/realZip.zip. the url option is used on each target to ensure that the theme gets uploaded to the correct place. The email and password configuration values pull from the command-line arguments --email=youremail@banno.com --password=yourpassword.\n\n```js\ngrunt.initConfig({\n  email: grunt.option('email'),\n  password: grunt.option('password'),\n  cms_upload: {\n    staging: {\n      options: {\n        url: 'http://staging.artemis.banno-cms.com'\n      },\n      src: ['deploy/dummyZip']\n    },\n    uat: {\n      options: {\n        url: 'http://uat.artemis.banno-cms.com'\n      },\n      src: ['deploy/realZip.zip']\n    }\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n1. *v0.0.13*\n\n    Updates request configiuration to ignore self-signed certificates.\n\n2. *v0.0.14*\n\n\tIf a file doesn't exist, throws a fail warn message.\n\n3. *v0.2.0*\n\n\tHandle redirects for uploads\n\n4. *v0.2.1*\n\n\tNew cms cookies require logout. Logout step added.\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Banno/grunt-cms-upload.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.2.0"
}
